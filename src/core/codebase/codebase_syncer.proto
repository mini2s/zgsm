syntax = "proto3";

package codebase_syncer;
option go_package = "./;codebase_syncer";

// Import required proto packages
import "google/protobuf/empty.proto";

// Token sharing request (encrypted storage)
// Share AccessToken request (includes server_endpoint)
message ShareAccessTokenRequest {
    string client_id = 1;        // Client ID
    string access_token = 2;     // Token
    string server_endpoint = 3;  // Cloud service endpoint
}

// Token sharing response
message ShareAccessTokenResponse {
    bool success = 1;
    string message = 2;
}

// Register workspace sync
message RegisterSyncRequest {
    string client_id = 1;        // Client ID
    string workspace_path = 2;     // Workspace path
    string workspace_name = 3;     // Workspace name
}

// Register workspace sync response
message RegisterSyncResponse {
    bool success = 1;           // Whether successful
    string message = 2;         // Message
}

// Unregister workspace sync
message UnregisterSyncRequest {
    string client_id = 1;        // Client ID
    string workspace_path = 2;     // Workspace path
    string workspace_name = 3;     // Workspace name
}

// Sync service definition
service SyncService {    
    // Register project sync
    rpc RegisterSync(RegisterSyncRequest) returns (RegisterSyncResponse);
    
    // Unregister project sync
    rpc UnregisterSync(UnregisterSyncRequest) returns (google.protobuf.Empty);
    
    // Share AccessToken (plaintext transmission, server-side encrypted storage)
    rpc ShareAccessToken(ShareAccessTokenRequest) returns (ShareAccessTokenResponse);
}